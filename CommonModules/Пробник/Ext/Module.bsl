Функция ПолучитьСписок () Экспорт	
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
	                |	Организации.Ссылка
	                |ИЗ
	                |	Справочник.Организации КАК Организации
	                |ГДЕ
	                |	Организации.Код = &Код";
	Запрос.УстановитьПараметр("Код", "000000000000001");
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка
	КонецЕсли;
	
	Возврат Неопределено
	
КонецФункции

Функция ОбновитьДанныеДокумента(ОбъектОснование, ДокументПриёмник)  Экспорт
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Поступление_товаров_и_услуг.Ссылка,
		|	Поступление_товаров_и_услуг.Организация,
		|	Поступление_товаров_и_услуг.Дата_поступления,
		|	Поступление_товаров_и_услуг.Сумма,
		|	Поступление_товаров_и_услуг.Контрагент
		|ИЗ
		|	Документ.Поступление_товаров_и_услуг КАК Поступление_товаров_и_услуг
		|ГДЕ
		|	Поступление_товаров_и_услуг.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка",ОбъектОснование);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			Структура = Новый Структура;
			Структура.Вставить("Организация", Выборка.Организация);
			Структура.Вставить("Дата_поступления", Выборка.Дата_поступления);
			Структура.Вставить("Сумма", Выборка.Сумма);
			Структура.Вставить("Контрагент", Выборка.Контрагент);
			
			Если ТипЗнч(ДокументПриёмник) = Тип("ДокументСсылка.Платежное_поручение_исход")	Тогда	
				Структура.Вставить("ПоступлениеТиУ", Выборка.Ссылка);	
			КонецЕсли;
			
		КонецЕсли;
			
		Возврат Структура
		
	КонецФункции

Функция КонтрольСуммыЗадолженности(Контрагент, ДокументОснование) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат	Неопределено 
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетНаОплатуПокупателя") тогда
		ЗнакСравнения = ">";
	Иначе    
		ЗнакСравнения = "<";		 
	КонецЕсли;
	
	Запрос = Новый запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(Взаиморасчеты_с_контрагентамиОстаткиИОбороты.СуммаОборот) КАК Обороты
	|ПОМЕСТИТЬ ВТ_СуммаОборот
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(
	|			,
	|			,
	|			Авто,
	|			,
	|			Контрагент = &Контрагент
	|				И ДокументОснование = &ДокументОснование) КАК Взаиморасчеты_с_контрагентамиОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_СуммаОборот.Обороты "+ЗнакСравнения+" 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БольшеНуля
	|ИЗ
	|	ВТ_СуммаОборот КАК ВТ_СуммаОборот";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РезультатЗапроса = Запрос.Выполнить();
			
	Выборка = РезультатЗапроса.Выбрать(); 
	Выборка.Следующий(); 
	Возврат Выборка.БольшеНуля //Выборка.СуммаОборот
	
КонецФункции
	
Функция ЗаписьДанныхВРегистр(СтркутураДляЗаполнения,ОсновнойДокумент) Экспорт
	
	НаборДанных = РегистрыСведений.СвязанныеДокументы.СоздатьНаборЗаписей();
	НаборДанных.Отбор.ОсновнойДокумент.Установить(ОсновнойДокумент);
	НаборДанных.Отбор.СвязанныйДокумент.Установить(СтркутураДляЗаполнения.СвязанныйДокумент);
	НоваяЗапись = НаборДанных.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяЗапись, СтркутураДляЗаполнения);
	НаборДанных.Записать(Истина);
	
КонецФункции

Функция  ПолучитьСвязанныеДокументыНаСервере(ОсновнойДокумент, ИсходныйДокумент = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязанныеДокументы.СвязанныйДокумент
	|ИЗ
	|	РегистрСведений.СвязанныеДокументы КАК СвязанныеДокументы
	|ГДЕ
	|	СвязанныеДокументы.ОсновнойДокумент = &ОсновнойДокумент";
	
	Запрос.УстановитьПараметр("ОсновнойДокумент", ОсновнойДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не  РезультатЗапроса.Пустой() тогда
			
		Выборка = РезультатЗапроса.Выбрать();
		
		Массив  = новый массив;
		
		Пока Выборка.Следующий() цикл
			
			Массив.Добавить(Выборка.СвязанныйДокумент);
			
		КонецЦикла;
		
		Если ИсходныйДокумент = Неопределено Тогда
			ИсходныйДокумент = ОсновнойДокумент;
		КонецЕсли;
			
		Возврат СформироватьМакет(Массив, ИсходныйДокумент, ОсновнойДокумент)
		
	КонецЕсли;
	
	Возврат Неопределено
	
КонецФункции

Функция СформироватьМакет (МассивДокументов, Исходник, ОсновнойДокумент) Экспорт
	
	Макет = ПолучитьОбщийМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьОсновнойДокумент = Макет.ПолучитьОбласть("ОбластьОсновнойДокумент");
	ОбластьПодчинённыйДокумент = Макет.ПолучитьОбласть("ОбластьПодчинённыйДокумент");
	
	Макет.Очистить();
	
	Если МассивДокументов = Неопределено тогда
		Возврат Неопределено
	КонецЕсли;
	
	ОбластьШапка.Параметры.ИсходныйДокумент = Исходник;
	ОбластьОсновнойДокумент.Параметры.ДокументОснование  =  ОсновнойДокумент;
	Макет.Вывести(ОбластьШапка);
	Макет.Вывести(ОбластьОсновнойДокумент);
	
	Для каждого СтрокаМассива из МассивДокументов цикл 
		
		ОбластьПодчинённыйДокумент.Параметры.ПодчинённыйДокумент =  СтрокаМассива;
		Макет.Вывести(ОбластьПодчинённыйДокумент);
		
	КонецЦикла;
	
	Возврат	Макет

КонецФункции