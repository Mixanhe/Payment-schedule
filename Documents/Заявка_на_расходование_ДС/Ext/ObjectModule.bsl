
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Поступление_товаров_и_услуг") Тогда
		// Заполнение шапки
		Дата_продажи = ДанныеЗаполнения.Дата_поступления;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = ДанныеЗаполнения.Ответственный;
		Документ_основание = ДанныеЗаполнения.Ссылка;
		Сумма = ДанныеЗаполнения.Сумма;
		Для Каждого ТекСтрокаСписок_товаров_и_услуг Из ДанныеЗаполнения.Список_товаров_и_услуг Цикл
			НоваяСтрока = Список_товаров_и_услуг.Добавить();
			НоваяСтрока.Товары = ТекСтрокаСписок_товаров_и_услуг.Товары;
			НоваяСтрока.Услуги = ТекСтрокаСписок_товаров_и_услуг.Услуги;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Взаиморасчеты_с_контрагентами Расход
	Движения.Взаиморасчеты_с_контрагентами.Записывать = Истина;
	Движение = Движения.Взаиморасчеты_с_контрагентами.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Организация = Организация;
	Движение.Период_взаимодействия = Дата;
	Движение.Контрагент = Контрагент;
	Движение.ДокументОснование = Документ_основание;
	Движение.Сумма = Сумма;
	
	Пробник.ЗаписьДанныхВРегистр(Новый Структура("СвязанныйДокумент, Контрагент, Сумма, ОсновнойДокумент", ЭтотОбъект.Ссылка,
	Контрагент, Сумма, ЭтотОбъект.Документ_основание), ЭтотОбъект.Документ_основание);


	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

